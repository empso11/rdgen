name: Custom Android Client Generator
run-name: Custom Android Client Generator
on:
  workflow_dispatch:
    inputs:
      server:
        description: 'Rendezvous Server'
        required: true
        default: ''
        type: string
      key:
        description: 'Public Key'
        required: true
        default: ''
        type: string
      apiServer:
        description: 'API Server'
        required: true
        default: ''
        type: string
      custom:
        description: 'Custom JSON'
        required: true
        default: ''
        type: string
      uuid:
        description: 'UUID of request'
        required: true
        default: ''
        type: string
      iconlink:
        description: 'Icon link'
        required: false
        default: 'false'
        type: string
      appname:
        description: 'App name'
        required: true
        default: 'rustdesk'
        type: string
      filename:
        description: 'Filename'
        required: true
        default: 'rustdesk'
        type: string
      extras:
        description: 'Extra inputs in JSON format'
        required: true
        default: '{}'
        type: string

env:
  SCITER_RUST_VERSION: "1.75"
  RUST_VERSION: "1.75"
  CARGO_NDK_VERSION: "3.1.2"
  SCITER_ARMV7_CMAKE_VERSION: "3.29.7"
  SCITER_NASM_DEBVERSION: "2.14-1"
  LLVM_VERSION: "15.0.6"
  FLUTTER_VERSION: "3.24.5"
  ANDROID_FLUTTER_VERSION: "3.24.5"
  FLUTTER_ELINUX_VERSION: "3.16.9"
  TAG_NAME: "${{ inputs.upload-tag }}"
  VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"
  VCPKG_COMMIT_ID: "460551b0ec06be1ba6b918448bf3b0f44add813d"
  VERSION: "${{ fromJson(inputs.extras).version }}"
  NDK_VERSION: "r27c"
  UPLOAD_ARTIFACT: 'true'
  STATUS_URL: "${{ secrets.GENURL }}/updategh"
  ANDROID_SIGNING_KEY: "${{ secrets.ANDROID_SIGNING_KEY }}"
  MACOS_P12_BASE64: "${{ secrets.MACOS_P12_BASE64 }}"
  SIGN_BASE_URL: "${{ secrets.SIGN_BASE_URL }}"

jobs:
  generate-bridge-linux:
    uses: ./.github/workflows/bridge.yml
    with:
      version: ${{ fromJson(inputs.extras).version }}

  build-rustdesk-android-universal:
    name: Build RustDesk Android Universal APK
    needs: [generate-bridge-linux]
    runs-on: ubuntu-22.04
    steps:
      - name: Free Disk Space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: false
          dotnet: true
          haskell: true
          docker-images: true

      - name: Report Status - Initializing
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ env.STATUS_URL }}
          method: 'POST'
          customHeaders: '{"Content-Type": "application/json"}'
          data: '{"uuid": "${{ inputs.uuid }}", "status": "5% - Initializing build environment..."}'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            clang \
            cmake \
            curl \
            gcc-multilib \
            git \
            g++ \
            g++-multilib \
            ninja-build \
            openjdk-17-jdk-headless \
            pkg-config \
            wget

      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Report Status - Source Code Checked Out
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ env.STATUS_URL }}
          method: 'POST'
          customHeaders: '{"Content-Type": "application/json"}'
          data: '{"uuid": "${{ inputs.uuid }}", "status": "15% - Source code checked out successfully."}'

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          flutter-version: ${{ env.ANDROID_FLUTTER_VERSION }}

      - name: Report Status - Flutter Installed
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ env.STATUS_URL }}
          method: 'POST'
          customHeaders: '{"Content-Type": "application/json"}'
          data: '{"uuid": "${{ inputs.uuid }}", "status": "25% - Flutter installed successfully."}'

      - name: Restore bridge files
        uses: actions/download-artifact@master
        with:
          name: bridge-artifact
          path: bridge/

      - name: Build RustDesk Universal APK
        env:
          JAVA_HOME: /usr/lib/jvm/java-17-openjdk-amd64
        run: |
          export PATH=/usr/lib/jvm/java-17-openjdk-amd64/bin:$PATH
          mkdir -p flutter/android/app/src/main/jniLibs/arm64-v8a
          mkdir -p flutter/android/app/src/main/jniLibs/armeabi-v7a
          mkdir -p flutter/android/app/src/main/jniLibs/x86_64
          cp bridge/bridge.log flutter/assets/bridge.log
          pushd flutter
          flutter build apk --release --target-platform android-arm64,android-arm,android-x64
          popd
          mkdir -p signed-apk
          mv flutter/build/app/outputs/flutter-apk/app-release.apk signed-apk/rustdesk-${{ env.VERSION }}-universal.apk

      - name: Report Status - Build Complete
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ env.STATUS_URL }}
          method: 'POST'
          customHeaders: '{"Content-Type": "application/json"}'
          data: '{"uuid": "${{ inputs.uuid }}", "status": "75% - Build completed successfully."}'

      - name: Sign APK
        uses: r0adkll/sign-android-release@v1
        if: env.ANDROID_SIGNING_KEY != null
        with:
          releaseDirectory: signed-apk
          signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
          alias: ${{ secrets.ANDROID_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}

      - name: Report Status - APK Signed
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ env.STATUS_URL }}
          method: 'POST'
          customHeaders: '{"Content-Type": "application/json"}'
          data: '{"uuid": "${{ inputs.uuid }}", "status": "85% - APK signed successfully."}'

      - name: Upload APK
        uses: actions/upload-artifact@master
        with:
          name: rustdesk-${{ env.VERSION }}.apk
          path: signed-apk/rustdesk-${{ env.VERSION }}-universal.apk

      - name: Report Status - Success
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ env.STATUS_URL }}
          method: 'POST'
          customHeaders: '{"Content-Type": "application/json"}'
          data: '{"uuid": "${{ inputs.uuid }}", "status": "100% - Build process completed successfully."}'