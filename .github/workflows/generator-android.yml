name: Custom Android Client Generator
run-name: Custom Android Client Generator
on: 
  workflow_dispatch:
    inputs:
      server:
        description: 'Rendezvous Server'
        required: true
        default: ''
        type: string
      key:
        description: 'Public Key'
        required: true
        default: ''
        type: string
      apiServer:
        description: 'API Server'
        required: true
        default: ''
        type: string
      custom:
        description: "Custom JSON"
        required: true
        default: ''
        type: string
      uuid:
        description: "uuid of request"
        required: true
        default: ''
        type: string
      iconlink:
        description: "icon link"
        required: false
        default: 'false'
        type: string
      logolink:
        description: "logo link"
        required: false
        default: 'false'
        type: string
      appname:
        description: "app name"
        required: true
        default: 'rustdesk'
        type: string
      filename:
        description: "Filename"
        required: true
        default: 'rustdesk'
        type: string
      extras:
        description: "extra inputs in json"
        required: true
        default: '{}'
        type: string


env:
  SCITER_RUST_VERSION: "1.75" # https://github.com/rustdesk/rustdesk/discussions/7503, also 1.78 has ABI change which causes our sciter version not working, https://blog.rust-lang.org/2024/03/30/i128-layout-update.html
  RUST_VERSION: "1.75" # sciter failed on m1 with 1.78 because of https://blog.rust-lang.org/2024/03/30/i128-layout-update.html
  CARGO_NDK_VERSION: "3.1.2"
  SCITER_ARMV7_CMAKE_VERSION: "3.29.7"
  SCITER_NASM_DEBVERSION: "2.14-1"
  LLVM_VERSION: "15.0.6"
  FLUTTER_VERSION: "3.24.5"
  ANDROID_FLUTTER_VERSION: "3.24.5" 
  # for arm64 linux because official Dart SDK does not work
  FLUTTER_ELINUX_VERSION: "3.16.9"
  TAG_NAME: "${{ inputs.upload-tag }}"
  VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"
  # vcpkg version: 2024.07.12
  VCPKG_COMMIT_ID: "460551b0ec06be1ba6b918448bf3b0f44add813d"
  VERSION: "${{ fromJson(inputs.extras).version }}"
  NDK_VERSION: "r27c"
  #signing keys env variable checks
  ANDROID_SIGNING_KEY: "${{ secrets.ANDROID_SIGNING_KEY }}"
  MACOS_P12_BASE64: "${{ secrets.MACOS_P12_BASE64 }}"
  UPLOAD_ARTIFACT: 'true'
  SIGN_BASE_URL: "${{ secrets.SIGN_BASE_URL }}"
  STATUS_URL: "${{ secrets.GENURL }}/updategh"

jobs:
  generate-bridge-linux:
    uses: ./.github/workflows/bridge.yml
    with:
      version: ${{ fromJson(inputs.extras).version }}

  build-rustdesk-android-universal:
  needs: [generate-bridge-linux]
  name: Build RustDesk Android Universal APK
  if: ${{ inputs.upload-artifact }}
  runs-on: ubuntu-22.04
  steps:
    # Step 1: 释放磁盘空间
    - name: Free Disk Space (Ubuntu)
      uses: jlumbroso/free-disk-space@main
      with:
        tool-cache: false
        android: false
        dotnet: true
        haskell: true
        large-packages: false
        docker-images: true
        swap-storage: false

    # Step 2: 导出 GitHub Actions 缓存环境变量
    - name: Export GitHub Actions cache environment variables
      uses: actions/github-script@v6
      with:
        script: |
          core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
          core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

    # Step 3: 安装依赖
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          clang \
          cmake \
          curl \
          gcc-multilib \
          git \
          g++ \
          g++-multilib \
          libayatana-appindicator3-dev \
          libasound2-dev \
          libc6-dev \
          libclang-11-dev \
          libunwind-dev \
          libgstreamer1.0-dev \
          libgstreamer-plugins-base1.0-dev \
          libgtk-3-dev \
          libpam0g-dev \
          libpulse-dev \
          libva-dev \
          libxcb-randr0-dev \
          libxcb-shape0-dev \
          libxcb-xfixes0-dev \
          libxdo-dev \
          libxfixes-dev \
          llvm-11-dev \
          nasm \
          ninja-build \
          openjdk-17-jdk-headless \
          pkg-config \
          tree \
          wget

    # Step 4: 检出代码
    - name: Checkout source code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    # Step 5: 安装 Flutter
    - name: Install flutter
      uses: subosito/flutter-action@v2
      with:
        channel: "stable"
        flutter-version: ${{ env.ANDROID_FLUTTER_VERSION }}

    # Step 6: 动态修改代码中的参数
    - name: Modify RustDesk Parameters
      run: |
        # 修改 Cargo.toml 中的 appname 和描述信息
        sed -i -e 's|description = "RustDesk Remote Desktop"|description = "${{ inputs.appname }}"|' ./Cargo.toml
        sed -i -e 's|ProductName = "RustDesk"|ProductName = "${{ inputs.appname }}"|' ./Cargo.toml
        sed -i -e 's|FileDescription = "RustDesk Remote Desktop"|FileDescription = "${{ inputs.appname }}"|' ./Cargo.toml
        sed -i -e 's|OriginalFilename = "rustdesk.exe"|OriginalFilename = "${{ inputs.appname }}.exe"|' ./Cargo.toml
        sed -i 's|name = "RustDesk"|name = "${{ inputs.appname }}"|' ./Cargo.toml

        # 修改 Portable 版本文件
        sed -i -e 's|description = "RustDesk Remote Desktop"|description = "${{ inputs.appname }}"|' ./libs/portable/Cargo.toml
        sed -i -e 's|ProductName = "RustDesk"|ProductName = "${{ inputs.appname }}"|' ./libs/portable/Cargo.toml
        sed -i -e 's|FileDescription = "RustDesk Remote Desktop"|FileDescription = "${{ inputs.appname }}"|' ./libs/portable/Cargo.toml
        sed -i -e 's|OriginalFilename = "rustdesk.exe"|OriginalFilename = "${{ inputs.appname }}.exe"|' ./libs/portable/Cargo.toml

        # 修改 Android 文件
        sed -i 's|android:label="RustDesk"|android:label="${{ inputs.appname }}"|' ./flutter/android/app/src/main/AndroidManifest.xml
        sed -i 's|android:label="RustDesk Input"|android:label="${{ inputs.appname }} Input"|' ./flutter/android/app/src/main/AndroidManifest.xml
        sed -i 's|RustDesk is Open|${{ inputs.appname }} is Open|' ./flutter/android/app/src/main/kotlin/com/carriez/flutter_hbb/BootReceiver.kt
        sed -i 's|Show Rustdesk|Show ${{ inputs.appname }}|' ./flutter/android/app/src/main/kotlin/com/carriez/flutter_hbb/FloatingWindowService.kt

        # 修改 Flutter 文件
        sed -i 's|RustDesk|${{ inputs.appname }}|' ./flutter/lib/main.dart
        sed -i 's|"RustDesk"|"${{ inputs.appname }}"|' ./flutter/lib/desktop/widgets/tabbar_widget.dart

    # Step 7: 修改服务器和密钥配置
    - name: Modify Servers and Keys
      run: |
        sed -i -e 's|rs-ny.rustdesk.com|${{ inputs.server }}|' ./libs/hbb_common/src/config.rs
        sed -i -e 's|OeVuKk5nlHiXp+APNn0Y3pC1Iwpwn44JGqrQCsWqmBw=|${{ inputs.key }}|' ./libs/hbb_common/src/config.rs
        sed -i -e 's|https://admin.rustdesk.com|${{ inputs.apiServer }}|' ./src/common.rs

    # Step 8: 编译 RustDesk APK
    - name: Build RustDesk APK
      env:
        JAVA_HOME: /usr/lib/jvm/java-17-openjdk-amd64
      run: |
        export PATH=/usr/lib/jvm/java-17-openjdk-amd64/bin:$PATH
        sed -i "s/signingConfigs.release/signingConfigs.debug/g" ./flutter/android/app/build.gradle
        pushd flutter
        flutter build apk "--release" --target-platform android-arm64,android-arm,android-x64,android-x86
        popd
        mkdir -p signed-apk
        mv ./flutter/build/app/outputs/flutter-apk/app-release.apk signed-apk/rustdesk-${{ env.VERSION }}-universal.apk

    # Step 9: 上报进度 - 编译完成
    - name: Report 50% Progress
      uses: fjogeleit/http-request-action@v1
      with:
        url: ${{ env.STATUS_URL }}
        method: 'POST'
        customHeaders: '{"Content-Type": "application/json"}'
        data: '{"uuid": "${{ inputs.uuid }}", "status": "50% complete"}'

    # Step 10: APK 签名
    - uses: r0adkll/sign-android-release@v1
      name: Sign app APK
      if: env.ANDROID_SIGNING_KEY != null
      id: sign-rustdesk
      with:
        releaseDirectory: ./signed-apk
        signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
        alias: ${{ secrets.ANDROID_ALIAS }}
        keyStorePassword: ${{ secrets.ANDROID_KEY_STORE_PASSWORD }}
        keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}

    # Step 11: 上报进度 - 签名完成
    - name: Report 100% Progress
      uses: fjogeleit/http-request-action@v1
      with:
        url: ${{ env.STATUS_URL }}
        method: 'POST'
        customHeaders: '{"Content-Type": "application/json"}'
        data: '{"uuid": "${{ inputs.uuid }}", "status": "Success"}'

    # Step 12: 上传 APK 到 GitHub Artifact
    - name: Upload APK as artifact
      if: env.UPLOAD_ARTIFACT == 'true'
      uses: actions/upload-artifact@master
      with:
        name: rustdesk-universal.apk
        path: signed-apk/rustdesk-${{ env.VERSION }}-universal.apk

    # Step 13: 发布到 GitHub Release
    - name: Publish APK to GitHub Release
    if: env.UPLOAD_ARTIFACT == 'true'
    uses: softprops/action-gh-release@v1
    with:
      prerelease: true
      tag_name: ${{ env.TAG_NAME }}
      files: |
        signed-apk/rustdesk-${{ env.VERSION }}-universal.apk


