name: Custom Android Client Generator
run-name: Custom Android Client Generator
on: 
  workflow_dispatch:
    inputs:
      server:
        description: 'Rendezvous Server'
        required: true
        default: ''
        type: string
      key:
        description: 'Public Key'
        required: true
        default: ''
        type: string
      apiServer:
        description: 'API Server'
        required: true
        default: ''
        type: string
      custom:
        description: "Custom JSON"
        required: true
        default: ''
        type: string
      uuid:
        description: "uuid of request"
        required: true
        default: ''
        type: string
      iconlink:
        description: "icon link"
        required: false
        default: 'false'
        type: string
      logolink:
        description: "logo link"
        required: false
        default: 'false'
        type: string
      appname:
        description: "app name"
        required: true
        default: 'rustdesk'
        type: string
      filename:
        description: "Filename"
        required: true
        default: 'rustdesk'
        type: string
      extras:
        description: "extra inputs in json"
        required: true
        default: '{}'
        type: string


env:
  SCITER_RUST_VERSION: "1.75" # https://github.com/rustdesk/rustdesk/discussions/7503, also 1.78 has ABI change which causes our sciter version not working, https://blog.rust-lang.org/2024/03/30/i128-layout-update.html
  RUST_VERSION: "1.75" # sciter failed on m1 with 1.78 because of https://blog.rust-lang.org/2024/03/30/i128-layout-update.html
  CARGO_NDK_VERSION: "3.1.2"
  SCITER_ARMV7_CMAKE_VERSION: "3.29.7"
  SCITER_NASM_DEBVERSION: "2.14-1"
  LLVM_VERSION: "15.0.6"
  FLUTTER_VERSION: "3.24.5"
  ANDROID_FLUTTER_VERSION: "3.24.5" 
  # for arm64 linux because official Dart SDK does not work
  FLUTTER_ELINUX_VERSION: "3.16.9"
  TAG_NAME: "${{ inputs.upload-tag }}"
  VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"
  # vcpkg version: 2024.07.12
  VCPKG_COMMIT_ID: "460551b0ec06be1ba6b918448bf3b0f44add813d"
  VERSION: "${{ fromJson(inputs.extras).version }}"
  NDK_VERSION: "r27c"
  #signing keys env variable checks
  ANDROID_SIGNING_KEY: "${{ secrets.ANDROID_SIGNING_KEY }}"
  MACOS_P12_BASE64: "${{ secrets.MACOS_P12_BASE64 }}"
  UPLOAD_ARTIFACT: 'true'
  SIGN_BASE_URL: "${{ secrets.SIGN_BASE_URL }}"
  STATUS_URL: "${{ secrets.GENURL }}/updategh"

jobs:
  generate-bridge-linux:
    uses: ./.github/workflows/bridge.yml
    with:
      version: ${{ fromJson(inputs.extras).version }}

  build-rustdesk-android:
    name: Build RustDesk Android APK
    runs-on: ubuntu-24.04
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: false
          dotnet: true
          haskell: true
          large-packages: false
          docker-images: true
          swap-storage: false

      - name: Set STATUS_URL
        run: |
          echo "STATUS_URL=${{ secrets.STATUS_URL }}" >> $GITHUB_ENV

      - name: Report Status - Start
        run: |
          curl -X POST -H "Content-Type: application/json" \
          -d '{"uuid": "${{ inputs.uuid }}", "status": "Starting build process"}' \
          ${{ env.STATUS_URL }}

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
               clang \
               cmake \
               curl \
               gcc-multilib \
               git \
               g++ \
               g++-multilib \
               imagemagick \
               libayatana-appindicator3-dev \
               libasound2-dev \
               libc6-dev \
               libclang-dev \
               libunwind-dev \
               libgstreamer1.0-dev \
               libgstreamer-plugins-base1.0-dev \
               libgtk-3-dev \
               libpam0g-dev \
               libpulse-dev \
               libva-dev \
               libvdpau-dev \
               libxcb-randr0-dev \
               libxcb-shape0-dev \
               libxcb-xfixes0-dev \
               libxdo-dev \
               libxfixes-dev \
               llvm-dev \
               nasm \
               ninja-build \
               openjdk-17-jdk-headless \
               pkg-config \
               tree \
               wget

      - name: Report Status - Dependencies Installed
        run: |
          curl -X POST -H "Content-Type: application/json" \
          -d '{"uuid": "${{ inputs.uuid }}", "status": "Dependencies installed"}' \
          ${{ env.STATUS_URL }}

      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          repository: rustdesk/rustdesk
          ref: refs/tags/${{ env.VERSION }}
          submodules: recursive

      - name: Report Status - Source Code Checked Out
        run: |
          curl -X POST -H "Content-Type: application/json" \
          -d '{"uuid": "${{ inputs.uuid }}", "status": "Source code checked out"}' \
          ${{ env.STATUS_URL }}

      - name: Install flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          flutter-version: ${{ env.ANDROID_FLUTTER_VERSION }}

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          components: "rustfmt"

      - name: Build RustDesk APK (Universal)
        shell: bash
        env:
          JAVA_HOME: /usr/lib/jvm/java-17-openjdk-amd64
        run: |
          export PATH=/usr/lib/jvm/java-17-openjdk-amd64/bin:$PATH
          pushd flutter
          flutter build apk --release --target-platform android-arm,android-arm64,android-x86,android-x64
          mv build/app/outputs/flutter-apk/app-release.apk ../rustdesk-${{ env.VERSION }}.apk
          popd

      - name: Report Status - APK Built
        run: |
          curl -X POST -H "Content-Type: application/json" \
          -d '{"uuid": "${{ inputs.uuid }}", "status": "APK built successfully"}' \
          ${{ env.STATUS_URL }}

      - name: Upload APK
        uses: actions/upload-artifact@master
        with:
          name: rustdesk-universal-apk
          path: ./rustdesk-${{ env.VERSION }}.apk




