name: Custom Android Client Generator
run-name: Custom Android Client Generator
on:
  workflow_dispatch:
    inputs:
      server:
        description: 'Rendezvous Server'
        required: true
        default: ''
        type: string
      key:
        description: 'Public Key'
        required: true
        default: ''
        type: string
      apiServer:
        description: 'API Server'
        required: true
        default: ''
        type: string
      custom:
        description: "Custom JSON"
        required: true
        default: ''
        type: string
      uuid:
        description: "uuid of request"
        required: true
        default: ''
        type: string
      iconlink:
        description: "icon link"
        required: false
        default: 'false'
        type: string
      logolink:
        description: "logo link"
        required: false
        default: 'false'
        type: string
      appname:
        description: "app name"
        required: true
        default: 'rustdesk'
        type: string
      filename:
        description: "Filename"
        required: true
        default: 'rustdesk'
        type: string
      extras:
        description: "extra inputs in json"
        required: true
        default: '{}'
        type: string

env:
  RUST_VERSION: "1.75"
  ANDROID_FLUTTER_VERSION: "3.24.5"
  NDK_VERSION: "r27c"
  VERSION: "${{ fromJson(inputs.extras).version }}"
  ANDROID_SIGNING_KEY: "${{ secrets.ANDROID_SIGNING_KEY }}"
  STATUS_URL: "${{ secrets.GENURL }}/updategh"
  UPLOAD_ARTIFACT: 'true'
  TAG_NAME: "${{ inputs.upload-tag }}"

jobs:
  generate-bridge-linux:
    uses: ./.github/workflows/bridge.yml
    with:
      version: ${{ fromJson(inputs.extras).version }}

  build-so-and-apk:
    name: Build so files and universal APK
    runs-on: ubuntu-22.04
    env:
      reltype: release
      x86_target: ""
      suffix: ""
    needs: [generate-bridge-linux]
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: false
          dotnet: true
          haskell: true
          large-packages: false
          docker-images: true
          swap-storage: false

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
               clang \
               cmake \
               curl \
               gcc-multilib \
               git \
               g++ \
               g++-multilib \
               libayatana-appindicator3-dev \
               libasound2-dev \
               libc6-dev \
               libclang-11-dev \
               libunwind-dev \
               libgstreamer1.0-dev \
               libgstreamer-plugins-base1.0-dev \
               libgtk-3-dev \
               libpam0g-dev \
               libpulse-dev \
               libva-dev \
               libxcb-randr0-dev \
               libxcb-shape0-dev \
               libxcb-xfixes0-dev \
               libxdo-dev \
               libxfixes-dev \
               llvm-11-dev \
               nasm \
               ninja-build \
               openjdk-17-jdk-headless \
               pkg-config \
               tree \
               wget

      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          flutter-version: ${{ env.ANDROID_FLUTTER_VERSION }}

      - name: Patch flutter (optional)
        continue-on-error: true
        run: |
          cd $(dirname $(dirname $(which flutter)))
          [[ "3.24.5" == ${{env.ANDROID_FLUTTER_VERSION}} ]] && git apply ${{ github.workspace }}/.github/patches/flutter_3.24.4_dropdown_menu_enableFilter.diff || true

      - uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: ${{ env.NDK_VERSION }}
          add-to-path: true

      - name: Restore bridge files
        uses: actions/download-artifact@v4
        with:
          name: bridge-artifact
          path: ./

      # --- 1. 生成 so 文件 ---
      - name: Build Rust so files (aarch64, armv7, x86_64)
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
          ANDROID_NDK_ROOT: ${{ steps.setup-ndk.outputs.ndk-path }}
        run: |
          rustup target add aarch64-linux-android
          rustup target add armv7-linux-androideabi
          rustup target add x86_64-linux-android
          cargo install cargo-ndk --version 3.1.2 --locked
          cargo ndk -t arm64-v8a -o ./flutter/android/app/src/main/jniLibs/ build --release
          cargo ndk -t armeabi-v7a -o ./flutter/android/app/src/main/jniLibs/ build --release
          cargo ndk -t x86_64 -o ./flutter/android/app/src/main/jniLibs/ build --release

      # --- 2. 可选：图标注入等 ---
      - name: icon stuff
        if: ${{ inputs.iconlink != 'false' }}
        continue-on-error: true
        shell: bash
        run: |
          mv ./res/icon.ico ./res/icon.ico.bak || true
          mv ./res/icon.png ./res/icon.png.bak || true
          mv ./res/tray-icon.ico ./res/tray-icon.ico.bak || true
          wget -O ./res/icon.png ${{ fromJson(inputs.iconlink).url }}/get_png?filename=${{ fromJson(inputs.iconlink).file }}"&"uuid=${{ fromJson(inputs.iconlink).uuid }}
          mv ./res/32x32.png ./res/32x32.png.bak || true
          mv ./res/64x64.png ./res/64x64.png.bak || true
          mv ./res/128x128.png ./res/128x128.png.bak || true
          mv ./res/128x128@2x.png ./res/128x128@2x.png.bak || true
          convert ./res/icon.png -define icon:auto-resize=256,64,48,32,16 ./res/icon.ico
          convert ./res/icon.png -define icon:auto-resize=256,64,48,32,16 ./res/tray-icon.ico
          cp ./res/icon.ico ./res/tray-icon.ico
          convert ./res/icon.png -resize 32x32 ./res/32x32.png
          convert ./res/icon.png -resize 64x64 ./res/64x64.png
          convert ./res/icon.png -resize 128x128 ./res/128x128.png
          convert ./res/128x128.png -resize 200% ./res/128x128@2x.png

      # --- 3. 参数注入/补丁 ---
      - name: 参数注入/补丁
        continue-on-error: true
        shell: bash
        run: |
          sed -i -e 's|rs-ny.rustdesk.com|${{ inputs.server }}|' ./libs/hbb_common/src/config.rs
          sed -i -e 's|OeVuKk5nlHiXp+APNn0Y3pC1Iwpwn44JGqrQCsWqmBw=|${{ inputs.key }}|' ./libs/hbb_common/src/config.rs
          sed -i -e 's|https://admin.rustdesk.com|${{ inputs.apiServer }}|' ./src/common.rs
          mkdir -p ./flutter/assets
          echo -n "${{ inputs.custom }}" | cat > ./flutter/assets/custom.txt

      # --- 4. 构建 universal apk ---
      - name: Build rustdesk
        shell: bash
        env:
          JAVA_HOME: /usr/lib/jvm/java-17-openjdk-amd64
        run: |
          export PATH=/usr/lib/jvm/java-17-openjdk-amd64/bin:$PATH
          sed -i "s/signingConfigs.release/signingConfigs.debug/g" ./flutter/android/app/build.gradle
          cp ${ANDROID_NDK_HOME}/toolchains/llvm/prebuilt/linux-x86_64/sysroot/usr/lib/aarch64-linux-android/libc++_shared.so ./flutter/android/app/src/main/jniLibs/arm64-v8a/
          cp ${ANDROID_NDK_HOME}/toolchains/llvm/prebuilt/linux-x86_64/sysroot/usr/lib/arm-linux-androideabi/libc++_shared.so ./flutter/android/app/src/main/jniLibs/armeabi-v7a/
          cp ${ANDROID_NDK_HOME}/toolchains/llvm/prebuilt/linux-x86_64/sysroot/usr/lib/x86_64-linux-android/libc++_shared.so ./flutter/android/app/src/main/jniLibs/x86_64/
          pushd flutter
          flutter pub get
          flutter build apk "--${{ env.reltype }}" --target-platform android-arm64,android-arm,android-x64${{ env.x86_target }}
          popd
          mkdir -p signed-apk
          mv ./flutter/build/app/outputs/flutter-apk/app-${{ env.reltype }}.apk signed-apk/${{ inputs.filename }}-${{ env.VERSION }}-universal${{ env.suffix }}.apk

      - name: Setup sign tool version variable
        shell: bash
        run: |
          BUILD_TOOL_VERSION=$(ls /usr/local/lib/android/sdk/build-tools/ | tail -n 1)
          echo "ANDROID_SIGN_TOOL_VERSION=$BUILD_TOOL_VERSION" >> $GITHUB_ENV
          echo Last build tool version is: $BUILD_TOOL_VERSION

      - uses: r0adkll/sign-android-release@v1
        name: Sign app APK
        if: env.ANDROID_SIGNING_KEY != null
        id: sign-rustdesk
        with:
          releaseDirectory: ./signed-apk
          signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
          alias: ${{ secrets.ANDROID_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: ${{ env.ANDROID_SIGN_TOOL_VERSION }}

      - name: Upload Artifacts
        if: env.ANDROID_SIGNING_KEY != null && env.UPLOAD_ARTIFACT == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.filename }}-${{ env.VERSION }}-universal.apk
          path: ${{steps.sign-rustdesk.outputs.signedReleaseFile}}

      - name: Publish signed apk package
        if: env.ANDROID_SIGNING_KEY != null && env.UPLOAD_ARTIFACT == 'true'
        uses: softprops/action-gh-release@v1
        with:
          prerelease: true
          tag_name: ${{ env.TAG_NAME }}
          files: |
            ${{steps.sign-rustdesk.outputs.signedReleaseFile}}

      - name: Publish unsigned apk package
        if: env.ANDROID_SIGNING_KEY == null && env.UPLOAD_ARTIFACT == 'true'
        uses: softprops/action-gh-release@v1
        with:
          prerelease: true
          tag_name: ${{ env.TAG_NAME }}
          files: |
            signed-apk/${{ inputs.filename }}-${{ env.VERSION }}-universal${{ env.suffix }}.apk

      - name: Report Status (Failed)
        if: failure()
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ env.STATUS_URL }}
          method: 'POST'
          customHeaders: '{"Content-Type": "application/json"}'
          data: '{"uuid": "${{ inputs.uuid }}", "status": "Generation failed, try again"}'

      - name: Report Status (Cancelled)
        if: cancelled()
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ env.STATUS_URL }}
          method: 'POST'
          customHeaders: '{"Content-Type": "application/json"}'
          data: '{"uuid": "${{ inputs.uuid }}", "status": "Generation cancelled, try again"}'