name: 自定义安卓客户端生成

on:
  workflow_dispatch:
    inputs:
      server:
        description: 'Rendezvous Server'
        required: true
        default: ''
        type: string
      key:
        description: 'Public Key'
        required: true
        default: ''
        type: string
      apiServer:
        description: 'API Server'
        required: true
        default: ''
        type: string
      custom:
        description: "Custom JSON"
        required: true
        default: ''
        type: string
      uuid:
        description: "uuid of request"
        required: true
        default: ''
        type: string
      iconlink:
        description: "icon link"
        required: false
        default: 'false'
        type: string
      logolink:
        description: "logo link"
        required: false
        default: 'false'
        type: string
      appname:
        description: "app name"
        required: true
        default: 'rustdesk'
        type: string
      filename:
        description: "Filename"
        required: true
        default: 'rustdesk'
        type: string
      extras:
        description: "extra inputs in json"
        required: true
        default: '{}'
        type: string

env:
  SCITER_RUST_VERSION: "1.75"
  RUST_VERSION: "1.75"
  CARGO_NDK_VERSION: "3.1.2"
  SCITER_ARMV7_CMAKE_VERSION: "3.29.7"
  SCITER_NASM_DEBVERSION: "2.14-1"
  LLVM_VERSION: "15.0.6"
  FLUTTER_VERSION: "3.24.5"
  ANDROID_FLUTTER_VERSION: "3.24.5"
  FLUTTER_ELINUX_VERSION: "3.16.9"
  TAG_NAME: "${{ inputs.upload-tag }}"
  VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"
  VCPKG_COMMIT_ID: "460551b0ec06be1ba6b918448bf3b0f44add813d"
  VERSION: "${{ fromJson(inputs.extras).version }}"
  NDK_VERSION: "r27c"
  ANDROID_SIGNING_KEY: "${{ secrets.ANDROID_SIGNING_KEY }}"
  MACOS_P12_BASE64: "${{ secrets.MACOS_P12_BASE64 }}"
  UPLOAD_ARTIFACT: 'true'
  SIGN_BASE_URL: "${{ secrets.SIGN_BASE_URL }}"
  STATUS_URL: "${{ secrets.GENURL }}/updategh"

jobs:
  generate_bridge_linux:
    name: 生成 bridge 库
    runs-on: ubuntu-22.04
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: 安装 Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
      - name: 安装依赖
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential pkg-config
      - name: 构建 bridge
        run: |
          # 假设 bridge 的 Cargo.toml 在 bridge/ 目录，否则就不要cd
          cd bridge
          cargo build --release
          mkdir -p ${{ github.workspace }}/bridge_bin
          cp target/release/*.so ${{ github.workspace }}/bridge_bin/
      - name: 上传 bridge 产物
        uses: actions/upload-artifact@v4
        with:
          name: bridge-artifact
          path: bridge_bin

  build_rustdesk_android:
    name: 构建 Rustdesk SO
    needs: [generate_bridge_linux]
    runs-on: ubuntu-22.04
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: 安装 Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
      - name: 安装 NDK
        uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: ${{ env.NDK_VERSION }}
      - name: 安装依赖
        run: |
          sudo apt-get update
          sudo apt-get install -y clang cmake curl gcc-multilib g++-multilib libunwind-dev pkg-config
      - name: 构建 aarch64 so
        run: |
          rustup target add aarch64-linux-android
          cargo build --target aarch64-linux-android --release
      - name: 构建 armv7 so
        run: |
          rustup target add armv7-linux-androideabi
          cargo build --target armv7-linux-androideabi --release
      - name: 构建 x86_64 so
        run: |
          rustup target add x86_64-linux-android
          cargo build --target x86_64-linux-android --release
      - name: 上传 Rustdesk aarch64 so
        uses: actions/upload-artifact@v4
        with:
          name: librustdesk.so.aarch64-linux-android
          path: ./target/aarch64-linux-android/release/liblibrustdesk.so
      - name: 上传 Rustdesk armv7 so
        uses: actions/upload-artifact@v4
        with:
          name: librustdesk.so.armv7-linux-androideabi
          path: ./target/armv7-linux-androideabi/release/liblibrustdesk.so
      - name: 上传 Rustdesk x86_64 so
        uses: actions/upload-artifact@v4
        with:
          name: librustdesk.so.x86_64-linux-android
          path: ./target/x86_64-linux-android/release/liblibrustdesk.so

  build_rustdesk_android_universal:
    name: 构建通用 APK
    needs: [generate_bridge_linux, build_rustdesk_android]
    runs-on: ubuntu-22.04
    env:
      reltype: release
      x86_target: ""
      suffix: ""
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        with:
          submodules: recursive

      # 下载 bridge 产物
      - name: 下载 bridge 产物
        uses: actions/download-artifact@v4
        with:
          name: bridge-artifact
          path: ./flutter/bridge_bin

      # 下载各架构 so
      - name: 下载 Rustdesk arm64 库
        uses: actions/download-artifact@v4
        with:
          name: librustdesk.so.aarch64-linux-android
          path: ./flutter/android/app/src/main/jniLibs/arm64-v8a
      - name: 下载 Rustdesk armv7 库
        uses: actions/download-artifact@v4
        with:
          name: librustdesk.so.armv7-linux-androideabi
          path: ./flutter/android/app/src/main/jniLibs/armeabi-v7a
      - name: 下载 Rustdesk x86_64 库
        uses: actions/download-artifact@v4
        with:
          name: librustdesk.so.x86_64-linux-android
          path: ./flutter/android/app/src/main/jniLibs/x86_64

      # 系统依赖
      - name: 安装系统依赖
        run: |
          sudo apt-get update
          sudo apt-get install -y clang cmake curl gcc-multilib g++-multilib imagemagick \
            libayatana-appindicator3-dev libasound2-dev libc6-dev libclang-11-dev \
            libunwind-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev \
            libgtk-3-dev libpam0g-dev libpulse-dev libva-dev libxcb-randr0-dev \
            libxcb-shape0-dev libxcb-xfixes0-dev libxdo-dev libxfixes-dev \
            llvm-11-dev nasm ninja-build openjdk-17-jdk-headless pkg-config tree wget

      # 安装 flutter
      - name: 安装 flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          flutter-version: ${{ env.ANDROID_FLUTTER_VERSION }}

      - name: Patch flutter
        continue-on-error: true
        run: |
          cd $(dirname $(dirname $(which flutter)))
          [[ "3.24.5" == ${{env.ANDROID_FLUTTER_VERSION}} ]] && git apply ${{ github.workspace }}/.github/patches/flutter_3.24.4_dropdown_menu_enableFilter.diff || true

      # 图标处理
      - name: 图标处理
        if: ${{ inputs.iconlink != 'false' }}
        continue-on-error: true
        run: |
          mv ./res/icon.ico ./res/icon.ico.bak || true
          mv ./res/icon.png ./res/icon.png.bak || true
          mv ./res/tray-icon.ico ./res/tray-icon.ico.bak || true
          wget -O ./res/icon.png "${{ fromJson(inputs.iconlink).url }}/get_png?filename=${{ fromJson(inputs.iconlink).file }}&uuid=${{ fromJson(inputs.iconlink).uuid }}"
          mv ./res/32x32.png ./res/32x32.png.bak || true
          mv ./res/64x64.png ./res/64x64.png.bak || true
          mv ./res/128x128.png ./res/128x128.png.bak || true
          mv ./res/128x128@2x.png ./res/128x128@2x.png.bak || true
          convert ./res/icon.png -define icon:auto-resize=256,64,48,32,16 ./res/icon.ico
          convert ./res/icon.png -define icon:auto-resize=256,64,48,32,16 ./res/tray-icon.ico
          cp ./res/icon.ico ./res/tray-icon.ico
          convert ./res/icon.png -resize 32x32 ./res/32x32.png
          convert ./res/icon.png -resize 64x64 ./res/64x64.png
          convert ./res/icon.png -resize 128x128 ./res/128x128.png
          convert ./res/128x128.png -resize 200% ./res/128x128@2x.png

      # 这里保留你的所有参数修改、补丁应用等shell步骤
      # 比如：
      # - name: 修改 App 名称
      #   run: sed -i "s/app_name: .*/app_name: '${{ inputs.appname }}'/g" ./flutter/pubspec.yaml
      # - name: 应用自定义补丁
      #   run: git apply .github/patches/your_patch.diff

      # 构建 APK
      - name: Build rustdesk 通用 APK
        shell: bash
        env:
          JAVA_HOME: /usr/lib/jvm/java-17-openjdk-amd64
        run: |
          export PATH=/usr/lib/jvm/java-17-openjdk-amd64/bin:$PATH
          sed -i "s/signingConfigs.release/signingConfigs.debug/g" ./flutter/android/app/build.gradle
          mv ./flutter/android/app/src/main/jniLibs/arm64-v8a/liblibrustdesk.so ./flutter/android/app/src/main/jniLibs/arm64-v8a/librustdesk.so
          cp ${ANDROID_NDK_HOME}/toolchains/llvm/prebuilt/linux-x86_64/sysroot/usr/lib/aarch64-linux-android/libc++_shared.so ./flutter/android/app/src/main/jniLibs/arm64-v8a/
          mv ./flutter/android/app/src/main/jniLibs/armeabi-v7a/liblibrustdesk.so ./flutter/android/app/src/main/jniLibs/armeabi-v7a/librustdesk.so
          cp ${ANDROID_NDK_HOME}/toolchains/llvm/prebuilt/linux-x86_64/sysroot/usr/lib/arm-linux-androideabi/libc++_shared.so ./flutter/android/app/src/main/jniLibs/armeabi-v7a/
          mv ./flutter/android/app/src/main/jniLibs/x86_64/liblibrustdesk.so ./flutter/android/app/src/main/jniLibs/x86_64/librustdesk.so
          cp ${ANDROID_NDK_HOME}/toolchains/llvm/prebuilt/linux-x86_64/sysroot/usr/lib/x86_64-linux-android/libc++_shared.so ./flutter/android/app/src/main/jniLibs/x86_64/
          pushd flutter
          flutter pub get
          flutter build apk "--release" --target-platform android-arm64,android-arm,android-x64
          popd
          mkdir -p signed-apk
          mv ./flutter/build/app/outputs/flutter-apk/app-release.apk signed-apk/${{ inputs.filename }}-${{ env.VERSION }}-universal.apk

      # 签名
      - uses: r0adkll/sign-android-release@v1
        name: 签名 APK
        if: env.ANDROID_SIGNING_KEY != null
        id: sign-rustdesk
        with:
          releaseDirectory: ./signed-apk
          signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
          alias: ${{ secrets.ANDROID_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "30.0.2"

      # 上传 APK
      - name: 上传到Actions制品
        uses: actions/upload-artifact@v4
        with:
          name: 通用安卓APK
          path: ${{steps.sign-rustdesk.outputs.signedReleaseFile}}